# Stage 1: Construction
FROM node:18-alpine AS builder

# Metadata
LABEL maintainer="IMENA-GEST Team"
LABEL description="Frontend React sécurisé pour IMENA-GEST"
LABEL version="1.0.0"

# Installer les dépendances système
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Créer l'utilisateur applicatif
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers de dépendances
COPY package*.json ./

# Installer les dépendances
RUN npm ci --no-audit --no-fund && \
    npm cache clean --force

# Copier le code source
COPY public/ ./public/
COPY src/ ./src/
COPY tsconfig.json ./
COPY tailwind.config.js ./
COPY postcss.config.js ./

# Variables d'environnement de build
ARG REACT_APP_API_URL=http://localhost:3001/api/v1
ARG REACT_APP_NODE_ENV=production
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_NODE_ENV=$REACT_APP_NODE_ENV

# Construire l'application pour la production
RUN npm run build

# Stage 2: Production avec Nginx
FROM nginx:alpine AS production

# Installer les utilitaires de sécurité
RUN apk add --no-cache \
    curl \
    && rm -rf /var/cache/apk/*

# Copier la configuration Nginx sécurisée
COPY nginx/frontend.conf /etc/nginx/conf.d/default.conf

# Copier les fichiers construits
COPY --from=builder /app/build /usr/share/nginx/html

# Créer l'utilisateur nginx
RUN adduser -D -s /bin/sh nginx || true

# Configuration des permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Exposer le port 80
EXPOSE 80

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Utiliser l'utilisateur nginx
USER nginx

# Commande par défaut
CMD ["nginx", "-g", "daemon off;"]
